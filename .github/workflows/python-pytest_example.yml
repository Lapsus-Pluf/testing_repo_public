# This workflow will be triggered on every push and pull request to the `main` branch.
#   But it will only install Python dependencies and run Pytest tests (using a variety of Python versions)
#   if modifications are made to the `python-pytest_example` directory.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Conditional Python (Pytest) tests execution

on:
  pull_request:
    branches: [ "main" ]

jobs:
  check-folder-changes:
    outputs:
      run_tests: ${{ steps.check_changes.outputs.run_tests }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: check_changes
        name: Check for changes in python-pytest_example directory
        run: |
          echo "Checking for changes in python-pytest_example/ directory..."
          if git diff --name-only HEAD^ HEAD | grep '^python-pytest_example/'; then
            echo "run_tests=true" >> $GITHUB_OUTPUT
            echo "Changes detected in python-pytest_example/ directory."
          else
            echo "run_tests=false" >> $GITHUB_OUTPUT
            echo "No changes detected in python-pytest_example/ directory -> skipping tests."
          fi

  run-tests:
    if: needs.check-folder-changes.outputs.run_tests == 'true'

    needs: check-folder-changes

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          cache: "pip"
          python-version: ${{ matrix.python-version }}

      - name: Install/Upgrade Python package managers
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: python -m pip install -r python-pytest_example/requirements.txt

      - name: Execute the Pytest tests
        run: python -m pytest python-pytest_example -v

  check-test-results:
    # Always run this job
    if: always()

    needs: [check-folder-changes, run-tests]

    runs-on: ubuntu-latest

    steps:
      - name: Decide final result
        run: |
          if [ "${{ needs.check-folder-changes.outputs.run_tests }}" = "false" ]; then
            echo "Tests were not required. Skipping final result check."
            exit 0
          fi
          if [ "${{ needs.run-tests.result }}" != "success" ]; then
            echo "Some tests failed."
            exit 1
          fi
          echo "All tests passed."
